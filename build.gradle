plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
//    id 'application'
    id 'maven-publish'
}
group 'com.gitlab.gui'
version '1.0.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
repositories {
    mavenCentral()
    maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
    implementation 'com.alibaba:fastjson:2.0.14'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.gitlab4j:gitlab4j-api:5.0.1'
    implementation 'cglib:cglib:3.3.0'
    implementation 'com.esotericsoftware:reflectasm:1.11.9'
    implementation 'org.xerial:sqlite-jdbc:3.39.3.0'
}
task testJar(type: Jar) {
    manifest {
        attributes 'Description': 'This is an application JAR'
    }
}
shadowJar {
    baseName 'gitLab-gui'
    classifier = null
    version = null
    //Shadow可以自动删除项目未使用的所有依赖项类别，从而将生成的阴影JAR最小化
//    minimize()
    manifest {
        //指定入口函数，其他的是默认
        attributes(
                'Main-Class': 'GitLabApplication',
        )
    }
    // 排除配置文件
//    exclude('log4j.properties')

    // 打包时排除指定的 jar 包
    dependencies {
        exclude(dependency('org.apache.logging.log4j:log4j-core:2.11.1'))
    }
    // 将 build.gradle 打入到 jar 中, 方便查看依赖包版本
    from("./") {
        include 'build.gradle'
    }
}
//发布jar
//publishing {
//    publications {
//        shadow(MavenPublication) { publication ->
//            project.shadow.component(publication)
//        }
//    }
//    repositories {
//        maven {
//            url "http://repo.myorg.com"
//        }
//    }
//}
assemble.dependsOn(shadowJar)




